# -*- coding: utf-8 -*-
"""beyondchats.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ukmp2pnErJvMKcP99Pl1pH1tLyAcj_0I
"""

import requests
import ipywidgets as widgets
from IPython.display import display, HTML

def fetch_api_data():
    url = "https://devapi.beyondchats.com/api/get_message_with_sources"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()["data"]["data"]
    else:
        print("Failed to fetch data from the API.")
        return []

def identify_citations(api_data, response_index):
    citations = []
    item = api_data[response_index]
    sources = item["source"]
    response = item["response"]
    citation_sources = []
    for source in sources:
        if source["context"].lower() in response.lower():
            citation_sources.append(source)
    return citation_sources

def show_citations(response_index):
    citations = identify_citations(api_data, response_index)
    response_text = api_data[response_index]['response']
    colored_response = f"<span style='color:black; font-weight: bold;'>{response_text}</span>"
    display(HTML("<style>.citation { margin-left: 20px; }</style>"))
    display(HTML(f"<h3 style='color:#2196F3;'>Response {response_index + 1}</h3>"))
    display(HTML(colored_response))

    for source in citations:
        print(f"<p class='citation'>&#8226; {source['context']}</p>")
    print()

api_data = fetch_api_data()

response_selector = widgets.Dropdown(
    options=[(f"Response {i+1}", i) for i in range(len(api_data))],
    description='Select a response:',
    disabled=False,
)

def on_response_select(change):
    response_index = change['new']
    show_citations(response_index)

response_selector.observe(on_response_select, names='value')

display(response_selector)